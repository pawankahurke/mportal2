<?php

/*
Revision history:

Date        Who     What
----        ---     ----
 9-Sep-02   EWB     Fixed a bug that was sometimes causing
                    scrip 38 to mistakenly show a process.
19-Sep-02   EWB     Giant refactoring
13-Nov-02   EWB     Log mysql errors.
 4-Dec-02   EWB     Reorginization Day
 6-Dec-02   EWB     Local Navagation
31-Dec-02   EWB     Single quotes for non-evaluated strings.
 9-Jan-03   EWB     Don't require register_globals.
17-Jan-03   EWB     Access to $_SERVER variables.
10-Feb-03   EWB     Uses sandbox libraries.
11-Feb-03   EWB     db_change()
13-Feb-03   EWB     mskb perl scripts now installed in $odir/event
14-Feb-03   EWB     Removed call-time pass by reference.
 6-Mar-03   NL      Uses PHP auth'n, output buffering, standard_html_header()
10-Mar-03   NL      Added lib path back in so code uses sandbox libraries.
10-Mar-03   NL      Passed 0 as $legend to standard_html_header()
14-Apr-03   NL      Move debug_note line below $debug.
20-Aug-03   EWB     Added scrip 77.
27-Dec-05   AAM     Fixed Scrip 77.  (bug 3003)
09-Oct-06   WOH     Made changes for bugzilla #3657 - head_standard_html_footer()

*/

$title = 'Search Knowledge Base';

ob_start(); // avoid indavertantly sending output (before HTTP Headers sent)
include('../lib/l-util.php');
include('../lib/l-db.php');
include('../lib/l-sql.php');
include('../lib/l-serv.php');
include('../lib/l-rcmd.php');
include('../lib/l-head.php');
include('local.php');
include('../lib/l-user.php');


function show_table_item($name, $valu)
{
    echo "<tr valign=\"top\"><td>";
    echo fontspeak("<b>$name:</b>");
    echo "</td><td>";
    echo fontspeak($valu);
    echo "</td></tr>";
}


function findprocesspath($string)
{
    $path = '';
    if (preg_match("/(^Faulting process:) (.*)\n/", $string, $match)) {
        $path = $match[2];
    }
    return $path;
}

function findeventsource($string)
{
    $source = '';
    if (preg_match("/^(Source:) (.*)$/m", $string, $match)) {
        $source = $match[2];
    }
    return $source;
}

function findbasename($path)
{
    $name = '';
    if (strlen($path) > 0) {
        $dirs = explode('\\', $path);
        $n = safe_count($dirs);
        if ($n <= 1) {
            $name = $path;
        } else {
            $name = $dirs[$n - 1];
        }
    }
    return $name;
}

/*
    |  uppercase filename, no extension
    */

function findprocname($name)
{
    $parts = explode('.', $name);
    return strtoupper($parts[0]);
}


/*
    |  We construct these strings by doing the searches in a browser, and then
    |  observing what urls are generated by the search string.
    |
    |  Lately Microsoft has been generating increasingly bizzare urls.
    */

function search_links($q)
{
    $plus     = str_replace('%20', '+', $q);
    $plusq    = str_replace('%20', '%2520', $q);

    $def      = "so=RECCNT&siteid=us&p=1&nq=NEW&qu=$plus";
    $def     .= "&IntlSearch=&boolean=PHRASE";
    $def     .= "&ig=8&i=00&i=01&i=02&i=03&i=04&i=05&i=06&i=07&i=08&i=09";
    $def     .= "&ig=07&i=99";
    $def     .= "&btnsearch=Submit+query";

    $sup      = "Catalog=LCID%3D1033%26CDID%3DEN-US-KB%26PRODLISTSRC%3DON&Product=msall";
    $sup     .= "&Query=$plusq";
    $sup     .= "&Queryc=$plus";
    $sup     .= "&withinResults=false&srchstep=0&KeywordType=ALL";
    $sup     .= "&Titles=false&numDays=&maxResults=25";

    $google   = "hl=en&q=%22$plus%22&btnG=Google+Search";

    echo "<ol>";
    echo "<li><a href=\"http://search.microsoft.com/Default.asp?$def\">";
    echo "Default Search</a>";

    echo "<li><a href=\"http://search.support.microsoft.com/search/default.aspx?$sup\">";
    echo "Support Search</a>";

    echo "<li><a href=\"http://www.google.com/search?$google\">";
    echo "Google Search</a>";

    echo "<li><a href=\"http://groups.google.com/groups?$google\">";
    echo "Usenet Search</a>";
    echo "</ol>";
}

function numericvalue($a)
{
    if (is_string($a)) {
        return intval($a);
    } else {
        return $a;
    }
}

/*
    |  $a and $b are expected to be strings begining with
    |  the representation of an integer value.  This routine
    |  is never called directly, it is used by usort to sort
    |  our query results.
    */

function compare($a, $b)
{
    $aa = numericvalue($a);
    $bb = numericvalue($b);
    if ($aa == $bb) {
        return 0;
    }
    return ($aa < $bb) ? -1 : 1;
}

function show_result($result)
{
    $count  = 0;
    $type   = 0;
    $url    = '';
    $phrase = '';

    $temp = explode(' ', $result);

    if (safe_count($temp) >= 4) {
        $count  = $temp[0];
        $type   = $temp[1];
        $phrase = $temp[2];
        $url    = $temp[3];
    }
    if ($type == 0) {
        $tname = "this exact phrase";
    }
    if ($type == 1) {
        $tname = "all the words";
    }
    if ($count == 1) {
        $rname = "one result";
    } else {
        if ($count == 0) {
            $rname = "no results";
        } else {
            $rname = "$count results";
        }
    }

    $query = rawurldecode($phrase);

    if ($count == 0) {
        $result = $rname;
    } else {
        $result = "<a href=\"$url\">$rname</a>";
    }
    $msg = fontspeak("<b>$query</b><br>The search for $tname found $result.");
    echo "<p>$msg</p>\n";
}

function show_error($cmd, $error)
{
    //     echo "<p><b>cmd: $cmd<br>error: $error";
    //     echo "<br>examine apache error log ";
    //     echo "/usr/local/etc/httpd/logs/error_log</b></p>";
    echo "
            <p>
                <b>
                    Unable to complete the search at this time.
                    Please try again.  If the error continues please
                    contact your system administrator.
                </b>
            </p>";
}


function search_cmd($cmd, $phrase, $type)
{
    $output = array();
    $count  = 0;
    $url    = "http://this.is/a/dummy/url";
    $exec   = "$cmd $phrase";
    exec($exec, $output, $error);
    if ($error) {
        show_error($cmd, $error);
    } else {
        if (safe_count($output) >= 2) {
            $count = $output[0];
            $url   = $output[1];
        }
    }
    return array($count, $type, $phrase, $url);
}

function search_exact($path, $phrase)
{
    $cmd = "$path/mskb.pl -e";
    debug_note("search_exact: $cmd");
    $res = search_cmd($cmd, $phrase, 0);
    return join(' ', $res);
}

function search_words($path, $phrase)
{
    $cmd = "$path/mskb.pl -a";
    debug_note("search_words: $cmd");
    $res = search_cmd($cmd, $phrase, 1);
    return join(' ', $res);
}

// 46 -- error dialog box message
// 47 -- warning dialog box message
// 48 -- informative dialog box message
// 49 -- question dialog box message
// 77 -- windows event log change
// 94 -- log icon dialog box message

function searchevent($scrip, $text1)
{
    $result = 0;
    if (strlen($text1)) {
        if ((46 <= $scrip) && ($scrip <= 49))
            $result = 1;
        if ($scrip == 77)
            $result = 1;
        if ($scrip == 94)
            $result = 1;
    }
    return $result;
}


/*
    |  Main program
    */

$db = db_connect();
$authuser = process_login($db);
$comp = component_installed();

$msg = ob_get_contents();           // save the buffered output so we can...
ob_end_clean();                     // (now dump the buffer)
echo standard_html_header($title, $comp, $authuser, 0, 0, 0, $db);

$priv   = user_info($db, $authuser, 'priv_debug', 0);
$eid    = intval(get_argument('eid', 0, 0));
if ($eid == 0) {
    $eid = intval(get_argument('sel_id', 0, 0));
}
$debug  = (get_argument('debug', 0, $priv)) ? 1 : 0;
$debug  = ($priv) ? $debug : 0;

if (trim($msg)) debug_note($msg);   // ...display any errors to debug users

$access = find_customers($authuser, $db);
db_change($GLOBALS['PREFIX'] . 'event', $db);

$row  = array();
$sql  = "select * from Events\n";
$sql .= " where idx = $eid and\n";
if ($access)
    $sql .= " (customer in ($access))";
else
    $sql .= " (servertime < 0)";
$res = redcommand($sql, $db);

$pname = '';

if ($res) {
    if (mysqli_num_rows($res) == 1) {
        $row = mysqli_fetch_array($res);
    }
    ((mysqli_free_result($res) || (is_object($res) && (get_class($res) == "mysqli_result"))) ? true : false);
}

if ($row) {
    $entered       = $row['entered'];
    $scrip         = $row['scrip'];
    $customer      = $row['customer'];
    $machine       = $row['machine'];
    $username      = $row['username'];
    $clientversion = $row['clientversion'];
    $clientsize    = $row['clientsize'];
    $priority      = $row['priority'];
    $description   = $row['description'];
    $type          = $row['type'];
    $path          = $row['path'];
    $executable    = $row['executable'];
    $version       = $row['version'];
    $size          = $row['size'];
    $id            = $row['id'];
    $windowtitle   = $row['windowtitle'];
    $string1       = $row['string1'];
    $string2       = $row['string2'];
    $raw1          = $row['text1'];
    $raw2          = $row['text2'];
    $raw3          = $row['text3'];
    $raw4          = $row['text4'];
    $servertime    = $row['servertime'];
} else {
    die("Couldn't execute query.");
}

$text1 = nl2br($raw1);
$text2 = nl2br($raw2);
$text3 = nl2br($raw3);
$text4 = nl2br($raw4);

#Back to Query Results/New Query

$msg = "Click 'back' on your browser to return to the query " .
    "results or perform a <a href=\"event.php\">new query</a>.<br>" .
    "You can also <a href=\"../doc/scrips/scrip.php?scrip=$scrip\">" .
    "view a description of scrip $scrip</a> " .
    "which provides more information about " .
    "the fields on this page.";

$msg = fontspeak($msg);
echo "<p>$msg</p>\n";

#Table With Event Detail Info
echo '<table border=0 cellpadding=3 cellspacing=0>';
show_table_item('Servertime', $servertime);
//  show_table_item('Record Key',$eid);
show_table_item('Username', $username);
show_table_item('Executable', $executable);
show_table_item('Window title', $windowtitle);
show_table_item('Machine', $machine);
if (($scrip == 38) && (strlen($raw4) > 0)) {
    $ppath = findprocesspath($raw4);
    $fname = findbasename($ppath);
    $pname = findprocname($fname);
    show_table_item('Process', $ppath);
}
if (($scrip == 77) && (strlen($raw2) > 0)) {
    $evsource = findeventsource($raw2);
    show_table_item('Event source', $evsource);
} else {
    $evsource = '';
}

// show_table_item('Text1',$text1);
// show_table_item('Text2',$text2);
// show_table_item('Text3',$text3);
// show_table_item('Text4',$text4);

echo '</table>';

$search = '';
$list = array();
$path = $comp['path'] . '/event';
debug_note("path: $path");

// 38 -- processor fault
if ($scrip == 38) {
    if ($executable == 'Unknown')
        $mname = '';
    else
        $mname = strtoupper($executable);
    if (strlen($pname)) {
        $phrases = array();
        $extra   = '';
        $phrases[] = "$pname caused";
        if ($text1 == 'Access violation') {
            $phrases[] = "$pname caused an Invalid Page Fault";
            $phrases[] = "$pname caused an Invalid Page Fault in module $mname";
            $phrases[] = "$pname caused an Invalid Page Fault in $mname";
            $phrases[] = "$pname caused a General Protection Fault in $mname";
            $phrases[] = "$pname caused a General Protection Fault in module $mname";
        }
        if ($text1 == 'Integer divide by zero') {
            $extra .= 'divide zero ';
        }
        if ($text1 == 'Array bounds exceeded') {
            $extra .= 'array bounds ';
        }
        if ($text1 == 'Illegal instruction') {
            $extra .= 'illegal ';
        }
        for ($i = 0; $i < safe_count($phrases); $i++) {
            $phrases[$i] = rawurlencode($phrases[$i]);
        }
        for ($i = 0; $i < safe_count($phrases); $i++) {
            $search = search_exact($path, $phrases[$i]);
            if (numericvalue($search) > 0) {
                $list[] = $search;
            }
        }

        $phrase = rawurlencode("$pname caused $extra fault $mname");
        $search = search_words($path, $phrase);
        if (numericvalue($search) > 0) {
            $list[] = $search;
        }
        $phrases[] = $phrase;

        if (strlen($mname) > 0) {
            $phrase = rawurlencode("$mname fault");
            $search = search_words($path, $phrase);
            if (numericvalue($search) > 0) {
                $list[] = $search;
            }
            $phrases[] = $phrase;
        }
    }
}


if (searchevent($scrip, $raw1)) {
    $search  = rawurlencode($raw1);
    $phrases = array();
    $cmd     = "$path/split.pl $search";
    exec($cmd, $phrases, $error);

    for ($i = 0; $i < safe_count($phrases); $i++) {
        $search = search_words($path, $phrases[$i]);
        if (numericvalue($search) > 0) {
            $list[] = $search;
            $search = search_exact($path, $phrases[$i]);
            if (numericvalue($search) > 0) {
                $list[] = $search;
            }
        }
    }
}

echo '<p><hr noshade size=1>';
if (safe_count($list) == 0) {
    echo '<p>no search results were found<p>';
} else {
    usort($list, 'compare');
    for ($i = 0; $i < safe_count($list); $i++) {
        show_result($list[$i]);
    }
}

if (($scrip == 38) && (strlen($executable) > 4) && (preg_match('/\.DLL$/i', $executable))) {
    $url = 'http://support.microsoft.com/servicedesks/fileversion/dllinfo.asp?sd=MSDN';
    echo "
            <form name=\"input\"
                action=\"$url\"
                method=\"POST\">
                <input type=\"hidden\" name=\"frmSubmit\" value=\"1\">
                <input type=\"hidden\" name=\"SearchType\" value=\"FileOnly\">
                <input type=\"hidden\" name=\"Language\" value=\"1\">
                <input type=\"hidden\" name=\"FileName\" value=\"$executable\">
                <input type=\"hidden\" name=\"StartRec\" value=0>
                <input type=\"hidden\" name=\"Move\" value=0>
                <input type=\"hidden\" name=\"Pages\" value=0>
                <input type=\"hidden\" name=\"PageNo\" value=0>
                <input type=\"hidden\" name=\"RecCount\" value=0>
                <input type=\"submit\" value=\"DLL Help\">
            </form>";
}

if (($scrip == 77) && ($id > 0)) {
    $href = "http://www.eventid.net/display.asp?"
        . "eventid=$id&"
        . "source=" . urlencode($evsource);
    $text = "Search EventID.Net for event $id";
    $link = html_link($href, $text);
    echo "<br>\n<p>$link</p><br>\n\n";
}


if (safe_count($phrases) > 0) {
    echo "<p><hr noshade size=1>";

    echo "<ol>";
    for ($i = 0; $i < safe_count($phrases); $i++) {
        $phrase = $phrases[$i];
        $msg    = rawurldecode($phrase);
        echo "<li><b>$msg</b>";
        search_links($phrase);
    }
    echo "</ol>";
}

echo head_standard_html_footer($authuser, $db);
