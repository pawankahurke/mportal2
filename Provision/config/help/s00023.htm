<!-- saved from url=(0022)http://internet.e-mail -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=windows-1252">
	<TITLE>Scrip 23 Configuration</TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.2  (Win32)">
	<META NAME="CREATED" CONTENT="20040304;20264120">
	<META NAME="CHANGED" CONTENT="20070504;9270112">
	<STYLE TYPE="text/css">
	<!--
		TD P { font-family: "verdana"; font-size: 10pt }
		P { font-family: "verdana"; font-size: 10pt }
		H3 { color: #333399; font-family: "verdana" }
		H4 { color: #333399; font-family: "verdana" }
		A:link { color: #333399 }
	-->
	</STYLE>
</HEAD>
<BODY LANG="en-US" LINK="#333399" DIR="LTR">
<H3>Scrip 23 Configuration</H3>
<H4>Scrip 23 Configuration Parameters and their default values</H4>
<UL>
	<LI><P STYLE="margin-bottom: 0in">Scrip enabled 
	</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>Initial delay in seconds
	before retrying failed event logs</EM> <B>60</B> seconds 
	</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>Maximum delay in seconds
	before retrying failed event logs</EM> <B>3600</B> seconds 
	</P>
</UL>
<UL>
	<LI><P STYLE="margin-bottom: 0in"><EM>Initial limit on random
	backoff in seconds for retrying failed logs</EM> <B>900</B> seconds 
	</P>
</UL>
<UL>
	<LI><P STYLE="margin-bottom: 0in"><EM>Maximum limit on random
	backoff in seconds for retrying failed logs</EM> <B>7200</B> seconds
		</P>
	<LI><P STYLE="margin-bottom: 0in"><I>Delete sent logs from queue</I>
	is enabled</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>Maximum number of event logs
	to queue</EM> <B>5300</B> 
	</P>
	<LI><P><EM>Send event logs now</EM> 
	</P>
</UL>
<P>Scrip 23 manages the process of retrying to send logs generated by
all Scrips, except for those generated by Scrip 61 which are managed
by Scrip 22, to the ASI log server when that process initially fails.
</P>
<P>There are two reasons why an event logging operation can fail,
forcing the client to re-try the operation. These cases are somewhat
different, so the ASI client handles them differently:</P>
<P>If the ASI client cannot reach the server, Scrip 23 will use the
<I>Initial delay in seconds before retrying failed event logs</I> and
the <I>Maximum delay in seconds before retrying failed event logs</I>
configuration parameters described below to manage the event log
transmission process.</P>
<P>In this case, there is no scarce resource. Instead, it is just a
transient failure (Note that we are ignoring the case where the
failure is caused by congestion.) Often the failures are short-lived,
so it is worthwhile to retry quickly. However, they are sometimes
lengthy failures, so it is a bad idea to consume resources by
continuously retrying. The best adaptive algorithm in this case is a
<I>fixed binary backoff</I>, where the retry delay starts at a short
interval, and the interval is doubled every retry, up to a maximum
retry interval.</P>
<H4>Initial delay in seconds before retrying failed event logs</H4>
<P>The <I>Initial delay in seconds before retrying failed event logs</I>
configuration parameter contains the starting value for event log
transmission retry interval. In other words, the first time Scrip 23
cannot reach the ASI server, it will wait the number of seconds
specified in the <I>Initial delay in seconds before retrying failed
event logs</I> configuration parameter before trying again.</P>
<H4>Maximum delay in seconds before retrying failed event logs</H4>
<P>The <I>Maximum delay in seconds before retrying failed event logs</I>
configuration parameter contains the maximum value for event log
transmission retry interval. In other words, the first time Scrip 23
cannot reach the ASI server, the number of seconds it will wait
before retryuing to send an event log will not be greater than that
specified in the <I>Maximum delay in seconds before retrying failed
event logs</I> configuration parameter.</P>
<P><BR><BR>
</P>
<P>The defaults values for the <I>Initial delay in seconds before
retrying failed event logs</I> and the <I>Maximum delay in seconds
before retrying failed event logs</I> configuration parameters are
respectively 60 and 3600. This means that if the ASI client does no
succeed in sending the event logs to the ASI server the first time,
it will retry sending them at intervals (in seconds): 60, 120, 240, ,
300, 300, 300 ...</P>
<P><BR><BR>
</P>
<P>If the ASI client can reach the ASI server, but the ASI server
returns an error saying that it is too busy, Scrip 23 will use the
<I>Initial limit on random backoff in seconds</I> and the <I>Maximum
limit on random backoff in seconds</I> configuration parameters
described below to manage the event log transmission process.</P>
<P>In this case, the ASI client is competing with other ASI clients
to reach the ASI server, and it has no way of knowing how many others
are involved, and how long they are taking. This is very similar to
the situation that happens when there is a collision on a coaxial
Ethernet network. So, we address it the same way, with a <I>random
binary backoff</I>. This is just like a <I>fixed binary backoff</I>,
except that the value being backed off represents the MAXIMUM delay,
and the actual delay is generated randomly as a number between zero
and the maximum delay.</P>
<H4>Initial limit on random backoff in seconds</H4>
<P>The <I>Initial limit on random backoff in seconds</I>
configuration parameter contains the starting value for the maximum
retry interval. In other words, the first time Scrip 23 gets a <B>server
busy</B> response, it will wait somewhere between zero and the number
of seconds entered in the <I>Initial limit on random backoff in
seconds</I> configuration parameter before trying again.</P>
<H4>Maximum limit on random backoff in seconds 
</H4>
<P>The <I>Maximum limit on random backoff in seconds</I>
configuration parameter contains the upper limit for the maximum
retry interval. In other words, if Scrip 23 continues to get <B>server
busy</B> responses, it will never wait longer than the number of
seconds entered in the <I>Maximum limit on random backoff in seconds</I>
configuration parameter before trying again, and it will end up
waiting somewhere between zero and this many seconds between retries.</P>
<H4>Delete sent logs from queue</H4>
<P>When the <I>Delete sent logs from queue</I> configuration
parameter is enabled, it removes event logs from the event database
on the system where the ASI client is installed that have been sent
to the ASI server. This means that the local event database, while
still fluctuating in size, should be around 5 KBytes.</P>
<P>When the <I>Delete sent logs from queue</I> configuration
parameter is disabled, the ASI client will save events locally, up to
the number entered in <I>Maximum number of event logs to queue</I>
configuration parameter.</P>
<P>By default, the <I>Delete sent logs from queue</I> configuration
parameter is enabled.</P>
<H4>Maximum number of event logs to queue</H4>
<P>In the <I>Maximum number of event logs to queue</I> configuration
parameter you enter the maximum number of event logs that the ASI
client will store on each local system.</P>
<P>The event log queue is circular. When it reaches the maximum
length, as defined by the value of the <EM>Maximum number of event
logs to queue</EM> configuration parameter, the next log added to the
queue replaces the oldest log in the queue.</P>
<H4>Send event logs now</H4>
<P>Clicking on the <EM>Send event logs now</EM> Execute button will
immediately send all the event logs that are in the message queue to
the ASI server from the systems selected via the pull-down list to
the right of the Execute button.</P>
<P><BR><BR><BR>
</P>
<HR SIZE=1 COLOR="#333399" NOSHADE>
<DIV ALIGN=RIGHT>
	<TABLE WIDTH=100% BORDER=0 CELLPADDING=0 CELLSPACING=0>
		<TR>
			<TD WIDTH=50% VALIGN=TOP>
				<P><FONT FACE="verdana, helvetica"><FONT SIZE=1>&copy; 2000-2007
				HandsFree Networks </FONT></FONT>
				</P>
			</TD>
		</TR>
	</TABLE>
</DIV>
<P><BR><BR>
</P>
</BODY>
</HTML>