<!-- saved from url=(0022)http://internet.e-mail -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=windows-1252">
	<TITLE>Scrip 61 Configuration</TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.2  (Win32)">
	<META NAME="CREATED" CONTENT="20031121;22173312">
	<META NAME="CHANGED" CONTENT="20070510;13304775">
	<STYLE TYPE="text/css">
	<!--
		TD P { font-family: "verdana"; font-size: 10pt }
		P { font-family: "verdana"; font-size: 10pt }
		H3 { color: #333399; font-family: "verdana" }
		H4 { color: #333399; font-family: "verdana" }
		A:link { color: #333399 }
	-->
	</STYLE>
</HEAD>
<BODY LANG="en-US" LINK="#333399" DIR="LTR">
<H3>Scrip 61 Configuration</H3>
<H4>Configuration Parameters and their default values</H4>
<UL>
	<LI><P STYLE="margin-bottom: 0in">Scrip enabled 
	</P>
	<LI><P STYLE="margin-bottom: 0in"><I>Log asset data into event log</I>
	disabled</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>Enter here machine-specific
	asset data values</EM> empty 
	</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>Enter here site-wide asset
	data values</EM> empty 
	</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>Enter here asset data to be
	retrieved from registry</EM> empty 
	</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>Search command lines</EM> set
	to <STRONG>0,all,allexes,exelocations</STRONG> 
	</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>System groups</EM>set to <STRONG>all,*</STRONG>
		</P>
	<LI><P STYLE="margin-bottom: 0in"><EM>File mask groups</EM>set to: 
	</P>
	<UL>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>exes,*.exe</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>vbscripts,*.vbs</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>batch,*.bat</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>coms,*.com</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>java,*.jar</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>bins,*.bin</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>dlls,*.dll</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>vxds,*vxd</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>inis,*.ini</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>sys,*.sys</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>drvs,*.drv</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>all,*.exe,*.vbs,*.com,*.jar,*.bin,*.vxd,*.ini,*.sys</STRONG>
				</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>allexes,*.exe,*.com,*.jar</STRONG>
				</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>allscripts,*.bat,*.vbs</STRONG>
				</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>allcfg,*.ini</STRONG> 
		</P>
		<LI><P STYLE="margin-bottom: 0in"><STRONG>dlldrvvxd,*.drv,*.dll,*.vxd</STRONG>
				</P>
	</UL>
	<LI><P STYLE="margin-bottom: 0in"><EM>Search directory group</EM>set
	to <STRONG>exelocations,%PROGRAMFILES%,C:\</STRONG> 
	</P>
	<LI><P STYLE="margin-bottom: 0in"><I>Survey sections</I> set to <B>*</B>
		</P>
	<LI><P STYLE="margin-bottom: 0in"><I>DMI Survey sections</I> set to
	<B>*</B> 
	</P>
	<LI><P STYLE="margin-bottom: 0in">When enabled, the Scrip runs at
	10am on the first day of the month 
	</P>
	<LI><P><EM>Run system survey now</EM> 
	</P>
</UL>
<H4>Log asset data into event log</H4>
<P>To diagnose the failure of asset logs information to successfully
be stored in the ASI asset database on the ASI server, you can use
the <I>Log asset data into event log</I> parameter. If you enable
this parameter, asset data will be stored in Scrip 61 event logs. In
this way, you will be able to see if Scrip 61 retrieves a system's
asset information correctly or not. In the former case, the absence
of a system's asset information in the ASI asset database is probably
caused by a failure of the asset log transmission mechanism. In the
latter, a failure of Scrip 61 to execute correctly is the probable
cause of the failure of a system's asset information to be present in
the ASI asset database.</P>
<H4>Enter here machine-specific asset data values</H4>
<P>The <EM>Enter here machine-specific asset data values</EM>
parameter contains the list of fields that you define, which will be
stored as part of the asset database record for the local system.
Entries in the list are on separate lines. Each entry has two
components separated by commas, with no spaces:</P>
<UL>
	<LI><P STYLE="margin-bottom: 0in">The first is the data label 
	</P>
	<LI><P>The second is the data itself 
	</P>
</UL>
<H4>Enter here site-wide asset data values</H4>
<P>The <EM>Enter here site-wide asset data values</EM> parameter
contains the list of fields that you define, which will be stored as
part of the asset database record for either the local system, or
that are common to all systems on the sub-net (e.g. department or
geographical location). Entries in the list are entered on separate
lines. Each entry has two components separated by commas:</P>
<UL>
	<LI><P STYLE="margin-bottom: 0in">The first is the data label 
	</P>
	<LI><P>The second is the data itself 
	</P>
</UL>
<H4>Enter here asset data to be retrieved from registry</H4>
<P>The <EM>Enter here asset data to be retrieved from
registry</EM>parameter contains the list of fields whose value is
extracted from registry keys you select, which will be stored as part
of the asset database record for either the local system, or that are
common to all systems on the sub-net. Entries in the list are entered
on separate lines. Each entry has two components separated by commas:</P>
<UL>
	<LI><P STYLE="margin-bottom: 0in">The first is the data label 
	</P>
	<LI><P STYLE="margin-bottom: 0in">The second component is the path
	to a registry key value. For example: 
	</P>
	<UL>
		<LI><P STYLE="margin-bottom: 0in">HKEY_LOCAL_MACHINE\Software\HandsFree
		Networks\HandsFree Client\ValueName 
		</P>
	</UL>
	<P>The part after the last backslash is the value name. If you leave
	this part blank the Scrip will capture and store the default key
	value. In that case, you just have a trailing backslash. <BR>For
	this field, Scrip 61 will read the registry key value and store it
	in a printable form. The printable form depends on what type the
	value is. If it's an integer the Scrip will convert it to a string.
	If it is a string, the Scrip will expand any environment variables.
	If it's a MULTI_SZ string the Scrip will write out the list
	separated by two spaces. If it's a binary and it has a length of 1,
	2 or 4, then the result is stored as an integer. If it's a binary
	and it looks like a string (all printable chars, null terminated)
	then the Scrip stores it as a string. If it's a binary and it
	doesn't meet any of these criteria, then Scrip 61 stores it as a
	list of hexadecimal digits separated by spaces. 
	</P>
</UL>
<H4>Notes about entering custom data</H4>
<P>When adding your custom data to the asset database using Scrip 61,
you do not need to do anything on the server side. The new fields
will be automatically added to the database. 
</P>
<P>Similarly, when you delete entries from the <EM>Enter here
machine-specific asset data values</EM>, <EM>Enter here site-wide
asset data values</EM>, or <EM>Enter here asset data to be retrieved
from registry</EM>, you don't have to do anything on the server side.
The fields that are no longer present in the Scrip 61 configuration
will still be accessible in the asset database.</P>
<H4>Search command lines</H4>
<P>The <EM>Search command lines</EM> parameter contains one or more
command lines separated by a carriage return, or new line feed.</P>
<P>The components of a search command line are separated by a comma,
with no spaces. Each command line has the following format:</P>
<UL>
	<LI><P STYLE="margin-bottom: 0in">0 (disable) or 1 (enable) - this
	makes it possible to temporarily disable a file search command line
	without deleting it from the list. 
	</P>
	<LI><P STYLE="margin-bottom: 0in">The name of the system group you
	would like the command line to apply to. Each system group is
	defined in the <EM>System groups</EM> parameter described below. 
	</P>
	<LI><P STYLE="margin-bottom: 0in">the name of the file mask group
	you want Scrip 61 to use when searching for files. Each file mask
	group is defined in the <EM>File mask groups</EM> parameter
	described below. 
	</P>
	<LI><P>The name of the search directory group you want Scrip 61 to
	search in each system included in the selected system group. Each
	search directory group is defined in the <EM>Search directory groups</EM>
	parameter described below. 
	</P>
</UL>
<H4>System groups</H4>
<P><EM>System groups</EM> parameter entries have the following
format:</P>
<UL>
	<LI><P STYLE="margin-bottom: 0in">Name of a system group followed by
	a comma with no spaces 
	</P>
	<LI><P>Names of individual systems included in the group separated
	by commas with no spaces 
	</P>
</UL>
<P>You can define as many <EM>System groups</EM> entries as you want
with each group entered on a new line.</P>
<P>Please note that when entering a system's name you should use its
NetBIOS name</P>
<H4>File mask groups</H4>
<P><EM>File mask groups</EM> parameter entries have the following
format:</P>
<UL>
	<LI><P STYLE="margin-bottom: 0in">Name of a file mask group followed
	by a comma with no spaces 
	</P>
	<LI><P>Names of individual file masks included in the group
	separated by commas with no spaces 
	</P>
</UL>
<P>You can define as many <EM>File mask groups</EM> entries as you
want with each group entered on a new line.</P>
<P>Please note that when defining <EM>File mask groups</EM> entries,
you can use the standard Microsoft MS-DOS wild card characters <STRONG>?</STRONG>
and <STRONG>*</STRONG> in both the file name and extension.</P>
<H4>Search directory group</H4>
<P><EM>Search directory groups</EM> parameter entries have the
following format with each value in an entry separated by a comma::</P>
<UL>
	<LI><P STYLE="margin-bottom: 0in">Name of a search directory group
	followed by a comma with no spaces 
	</P>
	<LI><P STYLE="margin-bottom: 0in">Directory specifications separated
	by commas with no spaces. For example 
	</P>
	<UL>
		<LI><P STYLE="margin-bottom: 0in">c:\Pmail 
		</P>
		<LI><P STYLE="margin-bottom: 0in">%PROGRAMFILES% 
		</P>
		<LI><P>d:\ 
		</P>
	</UL>
</UL>
<P>You can have as many <EM>Search directory group</EM> parameter
entries as you want, each entered on a new line.</P>
<P>Please note that Scrip 61 will search for files in the directories
specified in <EM>Search directory group</EM> parameter entries, and
all sub-directories levels.</P>
<P>Microsoft MS-DOS wild card characters ? and * are not allowed in
<EM>Search directory group</EM> parameter entries.</P>
<H4>Survey sections</H4>
<P>In the <I>Survey Sections</I> configuration parameter, you enter
the sections of the system survey you would like Scrip 61 to skip. In
this way, you can ensure that the Scrip will complete the system
survey, even in those infrequent cases when it cannot collect
information from one or more system areas, by skipping those areas. 
</P>
<P>You can also use the the <I>Survey Sections</I> configuration
parameter, to collect information only from areas which you would
like to retrieve the latest information from, or that you know change
frequently, while ignoring areas where the information is known to
change rarely. 
</P>
<P>The <I>Survey Sections</I> configuration parameter entry consists
of a comma delimited string with no spaces. The <I>all</I> <B>*</B>
wild card, and <B>!</B> exclusion operator are supported. For
example:</P>
<UL>
	<LI><P><B>*,!10</B> &ndash; would be used to exclude section 10
	(<I>Video controller</I> information) from the system survey</P>
	<LI><P><B>3,22,23,24,25,26,27,28,32,33,34,35</B> &ndash; would be
	used to collect only software related information</P>
</UL>
<P>The default value of the <I>Survey Sections</I> configuration
parameter is <B>*</B>, meaning that all survey sections are included.
</P>
<P>Below, you will find the list of currently covered survey
sections:</P>
<UL>
	<LI><P>1 /* User information */</P>
	<LI><P>2 /* Machine information */</P>
	<LI><P>3 /* Software information */</P>
	<LI><P>4 /* Manufacurer */</P>
	<LI><P>5 /* Processor information */</P>
	<LI><P>6 /* Time zone information */</P>
	<LI><P>7 /* Memory information */</P>
	<LI><P>8 /* Log and load all available SMBIOS table information. */</P>
	<LI><P>9 /* Monitor information */</P>
	<LI><P>10 /* Video controller information */</P>
	<LI><P>11 /* Log and load a list of Network clients */</P>
	<LI><P>12 /* Network/Adapter */</P>
	<LI><P>13 /* Log and load a list of Network protocols */</P>
	<LI><P>14 /* Log and load a list of Network services */</P>
	<LI><P>15 /* Components/Storage/Drives */</P>
	<LI><P>16 /* Get information about any CDROM drives installed */</P>
	<LI><P>17 /* SCSI Controller information */</P>
	<LI><P>18 /* Modem information */</P>
	<LI><P>19 /* Sound Card information */</P>
	<LI><P>20 /* Components/Storage/Drives */</P>
	<LI><P>21 /* Printing */</P>
	<LI><P>22 /* Check for items set to run as a service */</P>
	<LI><P>23 /* Log all software registered to run on startup. */</P>
	<LI><P>24 /* Get Internet explorer information */</P>
	<LI><P>25 /* Get netscape information */</P>
	<LI><P>26 /* Get outlook express information */</P>
	<LI><P>27 /* Pegasus mail client */</P>
	<LI><P>28 /* Eudora mail */</P>
	<LI><P>29 /* Log and load workgroup information */</P>
	<LI><P>30 /* Log and load a list of Domain/Host information.*/</P>
	<LI><P>31 /* Log and load a list of DNS servers.*/</P>
	<LI><P>32 /* Log and load all registered software installed. */</P>
	<LI><P>33 /* Log and load all registered software updates. */</P>
	<LI><P>34 /* Log and load all available software versions. */</P>
	<LI><P>35 /* Log and load all available software license numbers. */</P>
</UL>
<H4>DMI Survey sections</H4>
<P>In the <I>DMI Survey Sections</I> configuration parameter, you
enter the sections of the DMI survey you would like Scrip 61 to skip.
In this way, you can ensure that the Scrip will complete the system
survey, even in those infrequent cases when it cannot collect
information from one or more DMI related system areas, by skipping
those areas. 
</P>
<P>You can also use the the <I>DMI Survey Sections</I> configuration
parameter, to collect information only from areas which you would
like to retrieve the latest information from, or that you know change
frequently, while ignoring areas where the information is known to
change rarely. 
</P>
<P>The <I>DMI Survey Sections</I> configuration parameter entry
consists of a comma delimited string with no spaces. The <I>all</I> <B>*</B>
wild card, and <B>!</B> exclusion operator are supported. For
example:</P>
<UL>
	<LI><P><B>*,!14,</B> &ndash; would be used to exclude section 14
	(<I>Group Associations</I> information) from the DMI survey</P>
	<LI><P><B>0,13</B> &ndash; would be used to collect only BIOS
	related information</P>
</UL>
<P>The default value of the <I>Survey Sections</I> configuration
parameter is <B>*</B>, meaning that all survey sections are included.
</P>
<P>Below, you will find the list of currently covered DMI survey
sections:</P>
<P><BR><BR>
</P>
<UL>
	<LI><P>0 /* 3.3.1 BIOS Information */</P>
	<LI><P>1 /* 3.3.2 System Information */</P>
	<LI><P>2 /* 3.3.3 Base Board Information */</P>
	<LI><P>3 /* 3.3.4 Chassis Information */</P>
	<LI><P>4 /* 3.3.5 Processor Information */</P>
	<LI><P>5 /* 3.3.6 Memory Controller Information */</P>
	<LI><P>6 /* 3.3.7 Memory Module Information */</P>
	<LI><P>7 /* 3.3.8 Cache Information */</P>
	<LI><P>8 /* 3.3.9 Port Connector Information */</P>
	<LI><P>9 /* 3.3.10 System Slots */</P>
	<LI><P>10 /* 3.3.11 On Board Devices Information */</P>
	<LI><P>11 /* 3.3.12 OEM Strings */</P>
	<LI><P>12 /* 3.3.13 System Configuration Options */</P>
	<LI><P>13 /* 3.3.14 BIOS Language Information */</P>
	<LI><P>14 /* 3.3.15 Group Associations */</P>
	<LI><P>15 /* 3.3.16 System Event Log */</P>
	<LI><P>16 /* 3.3.17 Physical Memory Array */</P>
	<LI><P>17 /* 3.3.18 Memory Device */</P>
	<LI><P>18 /* 3.3.19 32-bit Memory Error Information */</P>
	<LI><P>19 /* 3.3.20 Memory Array Mapped Address */</P>
	<LI><P>20 /* 3.3.21 Memory Device Mapped Address */</P>
	<LI><P>21 /* 3.3.22 Built-in Pointing Device */</P>
	<LI><P>22 /* 3.3.23 Portable Battery */</P>
	<LI><P>23 /* 3.3.24 System Reset */</P>
	<LI><P>24 /* 3.3.25 Hardware Security */</P>
	<LI><P>25 /* 3.3.26 System Power Controls */</P>
	<LI><P>26 /* 3.3.27 Voltage Probe */</P>
	<LI><P>27 /* 3.3.28 Cooling Device */</P>
	<LI><P>28 /* 3.3.29 Temperature Probe */</P>
	<LI><P>29 /* 3.3.30 Electrical Current Probe */</P>
	<LI><P>30 /* 3.3.31 Out-of-band Remote Access */</P>
	<LI><P>31 /* 3.3.32 Boot Integrity Services Entry Point */</P>
	<LI><P>32 /* 3.3.33 System Boot Information */</P>
	<LI><P>33 /* 3.3.34 64-bit Memory Error Information */</P>
	<LI><P>34 /* 3.3.35 Management Device */</P>
	<LI><P>35 /* 3.3.36 Management Device Component */</P>
	<LI><P>36 /* 3.3.37 Management Device Threshold Data */</P>
	<LI><P>37 /* 3.3.38 Memory Channel */</P>
	<LI><P>38 /* 3.3.39 IPMI Device Information */</P>
	<LI><P>39 /* 3.3.40 System Power Supply */</P>
	<LI><P>126 /* 3.3.41 Inactive */</P>
	<LI><P>127 /* 3.3.42 End Of Table */</P>
</UL>
<H4>Run system survey now</H4>
<P>With the <EM>Execute</EM> button, you can run Scrip 61 on demand,
even if it's not enabled. In Scrip 61, the <EM>Execute</EM> button
can be used to execute the Scrip on the local system or on all
supported systems.</P>
<H4>Schedule</H4>
<P>The Schedule parameter has a command line with eight fields, each
entered on a new line.</P>
<P>The table below describes each field in detail.</P>
<TABLE WIDTH=958 BORDER=1 BORDERCOLOR="#c0c0c0" CELLPADDING=3 CELLSPACING=0>
	<COL WIDTH=64>
	<COL WIDTH=81>
	<COL WIDTH=784>
	<COL WIDTH=3>
	<TR>
		<TD WIDTH=64>
			<P ALIGN=CENTER><STRONG>Field Number</STRONG> 
			</P>
		</TD>
		<TD WIDTH=81>
			<P ALIGN=CENTER><STRONG>Field Name</STRONG> 
			</P>
		</TD>
		<TD WIDTH=784>
			<P ALIGN=CENTER><STRONG>Field Values and Description</STRONG> 
			</P>
		</TD>
		<TD WIDTH=3></TD>
	</TR>
	<TR>
		<TD WIDTH=64>
			<P>1</P>
		</TD>
		<TD WIDTH=81>
			<P>Minutes</P>
		</TD>
		<TD WIDTH=784>
			<P>0-59; a value of <B>*</B> means that the Scrip should run every
			minute 
			</P>
		</TD>
		<TD WIDTH=3 VALIGN=TOP></TD>
	</TR>
	<TR>
		<TD WIDTH=64>
			<P>2</P>
		</TD>
		<TD WIDTH=81>
			<P>Hours</P>
		</TD>
		<TD WIDTH=784>
			<P>0-23; a value of <B>*</B> means that the Scrip should run every
			hour 
			</P>
		</TD>
		<TD WIDTH=3 VALIGN=TOP></TD>
	</TR>
	<TR>
		<TD WIDTH=64>
			<P>3</P>
		</TD>
		<TD WIDTH=81>
			<P>Day of the Month</P>
		</TD>
		<TD WIDTH=784>
			<P>1-31, depending on the month; a value of <B>*</B> means that
			the Scrip should be run every day.</P>
		</TD>
		<TD WIDTH=3 VALIGN=TOP></TD>
	</TR>
	<TR>
		<TD WIDTH=64>
			<P>4</P>
		</TD>
		<TD WIDTH=81>
			<P>Month</P>
		</TD>
		<TD WIDTH=784>
			<P>1-12; a value of <B>*</B> means that the Scrip should be run
			every month.</P>
		</TD>
		<TD WIDTH=3 VALIGN=TOP></TD>
	</TR>
	<TR>
		<TD WIDTH=64>
			<P>5</P>
		</TD>
		<TD WIDTH=81>
			<P>Day of the Week</P>
		</TD>
		<TD WIDTH=784>
			<P>0, Sunday - 6, Saturday; a value of <B>*</B> means that the
			Scrip should be run every day of the week.</P>
		</TD>
		<TD WIDTH=3 VALIGN=TOP></TD>
	</TR>
	<TR>
		<TD WIDTH=64>
			<P>6</P>
		</TD>
		<TD WIDTH=81>
			<P>Minute Randomizer</P>
		</TD>
		<TD WIDTH=784>
			<P>N; the size of the time interval in minutes over which the
			Scrip should be randomly executed. We multiply N*60, then
			calculate a random number X between 1 and N*60, and run the Scrip
			X seconds after its scheduled time.</P>
		</TD>
		<TD WIDTH=3 VALIGN=TOP></TD>
	</TR>
	<TR>
		<TD WIDTH=64>
			<P>7</P>
		</TD>
		<TD WIDTH=81>
			<P>Conditional Execution</P>
		</TD>
		<TD WIDTH=784>
			<P>N; N=1 means that if the Scrip is past due, it will be run
			immediately, N=2 means that If the Scrip is past due, it will be
			run at the next scheduled execution time. If the value is set to
			2, the actual Scrip execution time will be within 3 minutes
			(either way) of the scheduled time. This is necessary to prevent
			the case where a process will not be executed if it is a little
			slow to start, or if the scheduler starts it a few seconds too
			early.</P>
		</TD>
		<TD WIDTH=3 VALIGN=TOP></TD>
	</TR>
	<TR>
		<TD WIDTH=64>
			<P>8</P>
		</TD>
		<TD WIDTH=81>
			<P>Failed Run Limit</P>
		</TD>
		<TD WIDTH=784>
			<P>N, where N is the number of times that Scrip execution is
			allowed to fail before notification is sent to the support
			provider; N=0, the Scrip will NEVER report a failure, N=1, the
			Scrip will report EVERY failure, N=2, the Scrip will report if it
			failed twice in a row, and so on.</P>
		</TD>
		<TD WIDTH=3 VALIGN=TOP></TD>
	</TR>
</TABLE>
<P><BR><BR>
</P>
<P>The <EM>Minutes</EM>, <EM>Hours</EM>, <EM>Day of the Month</EM>,
<EM>Month</EM>, and <EM>Day of the Week</EM> fields can have multiple
values and ranges of values separating them with commas.</P>
<P>For example, a 1,3,5 entry for the <EM>Minutes</EM> parameter
would mean that a Scrip would be executed at minutes 1, 3, and 5.</P>
<P>A 10-14 entry for the <EM>Hours</EM> parameter would mean that a
Scrip would be executed starting at 10 AM and ending at 2 PM.</P>
<P>Multiple value and range entries can be used together separated by
commas.</P>
<HR SIZE=1 COLOR="#333399" NOSHADE>
<DIV ALIGN=RIGHT>
	<TABLE WIDTH=100% BORDER=0 CELLPADDING=0 CELLSPACING=0>
		<TR>
			<TD WIDTH=50% VALIGN=TOP>
				<P><FONT FACE="verdana, helvetica"><FONT SIZE=1>&copy; 2000-2007
				HandsFree Networks </FONT></FONT>
				</P>
			</TD>
		</TR>
	</TABLE>
</DIV>
<P><BR><BR>
</P>
</BODY>
</HTML>